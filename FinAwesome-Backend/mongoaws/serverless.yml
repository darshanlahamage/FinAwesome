org: finawesome
service: mongoaws

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 128
  region: ap-southeast-1
  stage: ${opt:stage,'dev'}

functions:
populate and sendNotify scheduled lambda func with eventbridge
  populate:
    handler: src/handlers/populate.handler

  sendNotif:
    handler: src/handlers/sendNotif.handler
          
  createUser:
    handler: src/handlers/createUser.handler
    events:
      - httpApi:
          path: /register
          method: post
  loginUser:
    handler: src/handlers/loginUser.handler
    events:
      - httpApi:
          path: /login
          method: post
  getOffers:
    handler: src/handlers/getOffers.handler
    events:
      - httpApi:
          path: /offers
          method: get
  getOffer:
    handler: src/handlers/getOffer.handler
    events:
      - httpApi:
          path: /offer/{id}
          method: get
  lexBot:
    handler: src/handlers/lexBot.handler

#-------------- first create resource for lex then lambda---------------------------
# resources:
#   Resources:
#     LambdaPermissionInvokeFromLex:
#       Type: AWS::Lambda::Permission
#       Properties:
#         FunctionName: arn:aws:lambda:ap-south-1:975050103500:function:mongoaws-dev-lexBot
#         Action: lambda:InvokeFunction
#         Principal: lexv2.amazonaws.com

# package:
#   individually: true
#   include:
#     - src/handlers/createUser.js
#     - src\database\db.js  
#     - src\models\user.js 
#     - node_modules/**      

plugins:
  - serverless-offline
